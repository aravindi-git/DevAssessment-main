@attribute [Authorize]

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Chinook</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>Home
            </NavLink>
        </div>

        @if (NavigationItems != null && NavigationItems.Count > 0 )
        {
            @foreach (var navigationItem in NavigationItems)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@navigationItem.Url>
                        <i class="bi bi-music-note-list me-3" style="font-size: 1.25em"></i>
                        @navigationItem.DisplayName
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    // NavigationItems list and Current userId are passed to this component from the main layout as parameters. 
    [Parameter] public string CurrentUserId { get; set; }
    [Parameter] public List<NavigationItem> NavigationItems { get; set; }
    [Inject] NavigationService NavigationService { get; set; }

    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    // Navigation service itself has a defined event handeler NavMenuItemsChanged to trigger when the navigation items list is modified.
    // We are calling OnNavMenuItemsChanged method, in the OnInitialized event of the component.
    protected override void OnInitialized()
    {
        NavigationService.NavMenuItemsChanged += OnNavMenuItemsChanged; 
    }

    // When the nav menu item is added to the list, we are refreshing the component as one of the parameters is changed.
    protected override void OnParametersSet()
    {
        NavigationService.NavMenuItemsChanged += OnNavMenuItemsChanged;
    }

    private void OnNavMenuItemsChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }
}
